@model CreateOrUpdateNavbarElementModel

@if (Model.Id > 0)
{
    <div class="card-body">
        @await Html.PartialAsync("Table", new DataTablesModel
{
    Name = "vendors-grid",
    UrlRead = new DataUrl(nameof(NavbarController.NavbarElementVendorList), "Navbar", new RouteValueDictionary { [nameof(Model.Id)] = Model.Id }),
    UrlDelete = new DataUrl(nameof(NavbarController.NavbarElementVendorDelete), "Navbar", null),
    UrlUpdate = new DataUrl(nameof(NavbarController.NavbarElementVendorUpdate), "Navbar", null),
    Length = Model.VendorSearchModel.PageSize,
    LengthMenu = Model.VendorSearchModel.AvailablePageSizes,
    ColumnCollection = new List<ColumnProperty>
    {
    new ColumnProperty(nameof(NavbarElementVendorModel.VendorName))
    {
    Title = T("Admin.NavbarElement.Vendors.Fields.Vendor").Text
    },
    new ColumnProperty(nameof(NavbarElementVendorModel.IsFeaturedVendor))
    {
    Title = T("Admin.NavbarElement.Vendors.Fields.IsFeaturedVendor").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Render = new RenderBoolean(),
    Editable = true,
    EditType = EditType.Checkbox
    },
    new ColumnProperty(nameof(NavbarElementVendorModel.DisplayOrder))
    {
    Title = T("Admin.NavbarElement.Vendors.Fields.DisplayOrder").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.Number
    },
    new ColumnProperty(nameof(NavbarElementVendorModel.VendorId))
    {
    Title = T("Admin.Common.View").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.Button,
    Render = new RenderButtonView(new DataUrl("~/Admin/Vendor/Edit/", nameof(NavbarElementVendorModel.VendorId)))
    },
    new ColumnProperty(nameof(NavbarElementVendorModel.Id))
    {
    Title = T("Admin.Common.Edit").Text,
    Width = "200",
    ClassName =  NopColumnClassDefaults.Button,
    Render = new RenderButtonsInlineEdit()
    },
    new ColumnProperty(nameof(NavbarElementVendorModel.Id))
    {
    Title = T("Admin.Common.Delete").Text,
    Width = "100",
    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
    ClassName = NopColumnClassDefaults.Button
    }
    }
})
    </div>
    <div class="card-footer">
        <button type="submit" id="btnAddNewVendor"
                onclick="javascript:OpenWindow('@(Url.Action(nameof(NavbarController.VendorAddPopup), "Navbar", new { navbarElementId = Model.Id, btnId = "btnRefreshVendors", formId = "navbar-element-form" }))', 800, 800, true); return false;"
                class="btn btn-primary">
            @T("Admin.Navbars.Elements.Vendors.AddNew")
        </button>
        <button type="submit" id="btnRefreshVendors" style="display: none"></button>
        <script>
            $(function() {
                $('#btnRefreshVendors').click(function () {
                    //refresh grid
                    updateTable('#vendors-grid');

                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
    </div>
}
else
{
    <div class="card-body">
        @T("Admin.Navbars.Elements.Vendors.SaveBeforeEdit")
    </div>
}

