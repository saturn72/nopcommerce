@model NavbarInfoModel

@if (Model.Id > 0)
{
    <div class="card-body">
        @await Html.PartialAsync("Table", new DataTablesModel
{
    Name = "navbar-elements-grid",
    UrlRead = new DataUrl("NavbarElementList", "Navbar", new RouteValueDictionary
    {
        [nameof(Model.NavbarElementSearchModel.NavbarInfoId)] = Model.Id
    }),
    UrlDelete = new DataUrl("NavbarElementDelete", "Navbar", new RouteValueDictionary
    {
        [nameof(Model.NavbarElementSearchModel.NavbarInfoId)] = Model.Id
    }),
    UrlUpdate = new DataUrl("NavbarElementUpdate", "Navbar", new RouteValueDictionary
    {
        [nameof(Model.NavbarElementSearchModel.NavbarInfoId)] = Model.Id
    }),
    Length = Model.NavbarElementSearchModel.PageSize,
    LengthMenu = Model.NavbarElementSearchModel.AvailablePageSizes,
    ColumnCollection = new List<ColumnProperty>
    {

    new ColumnProperty(nameof(NavbarElementModel.Caption))
    {
    Title = T("Admin.NavbarElement.Fields.Caption").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.String
    },

    new ColumnProperty(nameof(NavbarElementModel.Alt))
    {
    Title = T("Admin.NavbarElement.Fields.Alt").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.String
    },

    new ColumnProperty(nameof(NavbarElementModel.Icon))
    {
    Title = T("Admin.NavbarElement.Fields.Icon").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.String
    },

    new ColumnProperty(nameof(NavbarElementModel.ActiveIcon))
    {
    Title = T("Admin.NavbarElement.Fields.ActiveIcon").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.String
    },

    new ColumnProperty(nameof(NavbarElementModel.Index))
    {
    Title = T("Admin.NavbarElement.Fields.Index").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.Number
    },

    new ColumnProperty(nameof(NavbarElementModel.Tags))
    {
    Title = T("Admin.NavbarElement.Fields.Tags").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.String
    },

    new ColumnProperty(nameof(NavbarElementModel.Type))
    {
    Title = T("Admin.NavbarElement.Fields.Type").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.String,
    },

    new ColumnProperty(nameof(NavbarElementModel.Value))
    {
    Title = T("Admin.NavbarElement.Fields.Value").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.String
    },
    // new ColumnProperty(nameof(NavbarElementModel))
    // {
    // Title = T("Admin.Navbars.Elements.Fields.DisplayOrder").Text,
    // Width = "150",
    // ClassName = NopColumnClassDefaults.CenterAll,
    // Editable = true,
    // EditType = EditType.Number
    // },
    // new ColumnProperty(nameof(NavbarNavbarElementModel.NavbarElementId))
    // {
    // Title = T("Admin.Common.View").Text,
    // Width = "150",
    // ClassName = NopColumnClassDefaults.Button,
    // Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/", nameof(NavbarProductModel.ProductId)))
    // },
    new ColumnProperty(nameof(NavbarElementModel.Id))
    {
    Title = T("Admin.Common.Edit").Text,
    Width = "200",
    ClassName =  NopColumnClassDefaults.Button,
    Render = new RenderButtonsInlineEdit()
    },
    new ColumnProperty(nameof(NavbarElementModel.Id))
    {
    Title = T("Admin.Common.Delete").Text,
    Width = "100",
    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
    ClassName = NopColumnClassDefaults.Button
    }
    }
})
    </div>
    <div class="card-footer">
        <button type="submit" id="btnAddNewNavbarInfoElement"
                onclick="javascript:OpenWindow('@(Url.Action("NavbarElementAddPopup", "Navbar", new { navbarInfoId = Model.Id, formId = "navbar-form" }))', 800, 800, true); return false;"
                class="btn btn-primary">
            @T("Admin.Navbars.Elements.AddNew")
        </button>
        <button type="submit" id="btnRefreshElements" style="display: none"></button>
        <script>
            $(function() {
                $('#btnRefreshElements').click(function () {
                    //refresh grid
                    updateTable('#elements-grid');

                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
    </div>
}
else
{
    <div class="card-body">
        @T("Admin.Navbars.Elements.SaveBeforeEdit")
    </div>
}

